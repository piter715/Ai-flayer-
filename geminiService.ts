import { GoogleGenAI } from "@google/genai";

const API_KEY = process.env.API_KEY;

if (!API_KEY) {
  throw new Error("API_KEY environment variable not set");
}

const ai = new GoogleGenAI({ apiKey: API_KEY });

/**
 * Generates a flyer image using the Gemini API.
 * @param userPrompt The user's description of the flyer.
 * @returns A base64 encoded JPEG data URL of the generated image.
 */
export const generateFlyer = async (userPrompt: string): Promise<string> => {
  try {
    const enhancedPrompt = `Crea un flyer visualmente impactante y de calidad premium. El concepto es: "${userPrompt}". El diseño debe ser moderno, con tipografía elegante y colores atractivos. Formato vertical para flyer.`;
    
    const response = await ai.models.generateImages({
        model: 'imagen-4.0-generate-001',
        prompt: enhancedPrompt,
        config: {
          numberOfImages: 1,
          outputMimeType: 'image/jpeg',
          aspectRatio: '3:4',
        },
    });

    if (response.generatedImages && response.generatedImages.length > 0) {
      const base64ImageBytes = response.generatedImages[0].image.imageBytes;
      return `data:image/jpeg;base64,${base64ImageBytes}`;
    } else {
      throw new Error("No image was generated by the API.");
    }
  } catch (error) {
    console.error("Error calling Gemini API:", error);
    throw new Error("Failed to generate flyer image.");
  }
};
